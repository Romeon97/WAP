-- -----------------------------------------------------
-- 1) (Optioneel) Schakel tijdelijk foreign key checks uit en drop bestaande tabellen als ze bestaan:
-- -----------------------------------------------------
SET FOREIGN_KEY_CHECKS=0;
DROP TABLE IF EXISTS `criterium`;
DROP TABLE IF EXISTS `criterium_group`;
DROP TABLE IF EXISTS `comparison_operator_type`;
DROP TABLE IF EXISTS `operator_type`;
DROP TABLE IF EXISTS `criterium_type`;
DROP TABLE IF EXISTS `query`;
DROP TABLE IF EXISTS `contract`;
SET FOREIGN_KEY_CHECKS=1;

-- -----------------------------------------------------
-- 2) Tabel: contract
-- -----------------------------------------------------
CREATE TABLE `contract` (
  `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  `identifier` VARCHAR(255) DEFAULT NULL,
  `company_id` INT DEFAULT NULL,
  `omschrijving` VARCHAR(256) DEFAULT NULL,
  `start_datum` DATE DEFAULT NULL,
  `eind_datum` DATE DEFAULT NULL,
  `url` VARCHAR(100) DEFAULT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- -----------------------------------------------------
-- 3) Tabel: query (FK -> contract)
-- -----------------------------------------------------
CREATE TABLE `query` (
  `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  `contract_id` BIGINT UNSIGNED NOT NULL,
  `omschrijving` VARCHAR(256) DEFAULT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  CONSTRAINT `fk_query_contract` FOREIGN KEY (`contract_id`)
    REFERENCES `contract`(`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- -----------------------------------------------------
-- 4) Tabel: operator_type
-- -----------------------------------------------------
CREATE TABLE `operator_type` (
  `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  `omschrijving` VARCHAR(45) NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- -----------------------------------------------------
-- 5) Tabel: comparison_operator_type
-- -----------------------------------------------------
CREATE TABLE `comparison_operator_type` (
  `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  `omschrijving` VARCHAR(45) NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- -----------------------------------------------------
-- 6) Tabel: criterium_type
-- -----------------------------------------------------
CREATE TABLE `criterium_type` (
  `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  `omschrijving` VARCHAR(45) NOT NULL,
  `referenced_table` VARCHAR(45) DEFAULT NULL,
  `referenced_field` VARCHAR(45) DEFAULT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- -----------------------------------------------------
-- 7) Tabel: criterium_group (FK -> query, operator_type, criterium_type)
-- -----------------------------------------------------
CREATE TABLE `criterium_group` (
  `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  `query` BIGINT UNSIGNED NOT NULL COMMENT 'Verwijzing naar query.id',
  `type` BIGINT UNSIGNED DEFAULT NULL COMMENT 'Verwijzing naar criterium_type.id',
  `group_level` INT DEFAULT 1,
  `operator` BIGINT UNSIGNED NOT NULL COMMENT 'Verwijzing naar operator_type.id',
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  CONSTRAINT `fk_criterium_group_query` FOREIGN KEY (`query`)
    REFERENCES `query`(`id`) ON DELETE CASCADE,
  CONSTRAINT `fk_criterium_group_type` FOREIGN KEY (`type`)
    REFERENCES `criterium_type`(`id`) ON DELETE SET NULL,
  CONSTRAINT `fk_criterium_group_operator` FOREIGN KEY (`operator`)
    REFERENCES `operator_type`(`id`) ON DELETE RESTRICT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- -----------------------------------------------------
-- 8) Tabel: criterium (FK -> criterium_group, operator_type, comparison_operator_type)
-- -----------------------------------------------------
CREATE TABLE `criterium` (
  `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  `group` BIGINT UNSIGNED NOT NULL COMMENT 'Verwijzing naar criterium_group.id',
  `operator` BIGINT UNSIGNED DEFAULT NULL COMMENT 'Verwijzing naar operator_type.id',
  `int_value` INT DEFAULT NULL,
  `string_value` VARCHAR(45) DEFAULT NULL,
  `float_value` FLOAT DEFAULT NULL,
  `value_type` INT DEFAULT NULL COMMENT '1=int, 2=string, 3=float etc.',
  `comparison` BIGINT UNSIGNED NOT NULL COMMENT 'Verwijzing naar comparison_operator_type.id',
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  CONSTRAINT `fk_criterium_group` FOREIGN KEY (`group`)
    REFERENCES `criterium_group`(`id`) ON DELETE CASCADE,
  CONSTRAINT `fk_criterium_operator` FOREIGN KEY (`operator`)
    REFERENCES `operator_type`(`id`) ON DELETE SET NULL,
  CONSTRAINT `fk_criterium_comparison` FOREIGN KEY (`comparison`)
    REFERENCES `comparison_operator_type`(`id`) ON DELETE RESTRICT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- -----------------------------------------------------
-- 9) INSERTS: operator_type (1=And, 2=Or)
-- -----------------------------------------------------
INSERT INTO `operator_type` (`id`, `omschrijving`, `created_at`, `updated_at`) VALUES
 (1, 'And', NOW(), NOW()),
 (2, 'Or', NOW(), NOW());

-- -----------------------------------------------------
-- 10) INSERTS: comparison_operator_type
--   1=Equal, 2=Less than, 3=Less or equal, 4=More than, 5=More or equal, 6=Not
-- -----------------------------------------------------
INSERT INTO `comparison_operator_type` (`id`, `omschrijving`, `created_at`, `updated_at`) VALUES
 (1, 'Equal', NOW(), NOW()),
 (2, 'Less than', NOW(), NOW()),
 (3, 'Less than or equal', NOW(), NOW()),
 (4, 'More than', NOW(), NOW()),
 (5, 'More than or equal', NOW(), NOW()),
 (6, 'Not', NOW(), NOW());

-- -----------------------------------------------------
-- 11) INSERTS: criterium_type
-- -----------------------------------------------------
INSERT INTO `criterium_type` (`id`, `omschrijving`, `referenced_table`, `referenced_field`, `created_at`, `updated_at`) VALUES
 (1, 'Een lijst van landcodes', 'nearestlocation', 'country_code', NOW(), NOW()),
 (2, 'Hoogte van het station', 'station', 'elevation', NOW(), NOW()),
 (3, 'Coördinaten, breedtegraad', 'station', 'latitude', NOW(), NOW()),
 (4, 'Coördinaten, lengtegraad', 'station', 'longitude', NOW(), NOW()),
 (5, 'Regiocode', 'nearestlocation', 'administrative_region1', NOW(), NOW());
-- -----------------------------------------------------
-- (Voorbeeld) Contract invoeren: contract_id = 6
-- -----------------------------------------------------
INSERT INTO `contract`
(`id`, `company_id`, `omschrijving`, `start_datum`, `eind_datum`, `url`, `created_at`, `updated_at`)
VALUES
 (6, 123, 'Voorbeeld Contract', '2023-01-01', '2024-01-01', 'https://example.com', NOW(), NOW());

-- -----------------------------------------------------
-- (Voorbeeld) Query invoeren: id=1 bij contract_id=6
-- -----------------------------------------------------
INSERT INTO `query`
(`id`, `contract_id`, `omschrijving`, `created_at`, `updated_at`)
VALUES
 (1, 6, 'Alle stations in Noorwegen en Zweden boven de 200 meter en alle stations boven 75 graden noorderbreedte.', NOW(), NOW());

-- -----------------------------------------------------
-- (Voorbeeld) criterium_group
--   ID | Query=1 | Type=? | group_level | Operator=?
--  (1) -> type=1 (landcodes), group_level=1, operator=1 (AND)
--  (2) -> type=2 (elevation), group_level=1, operator=1 (AND)
--  (3) -> type=3 (latitude), group_level=2, operator=2 (OR)
-- -----------------------------------------------------
INSERT INTO `criterium_group`
(`id`, `query`, `type`, `group_level`, `operator`, `created_at`, `updated_at`)
VALUES
 (1, 1, 1, 1, 1, NOW(), NOW()),
 (2, 1, 2, 1, 1, NOW(), NOW()),
 (3, 1, 3, 2, 2, NOW(), NOW());

-- -----------------------------------------------------
-- (Voorbeeld) criterium
--   (1) Group=1, operator=2 (Or), string_value='NO', value_type=2 (string), comparison=1 (equal)
--   (2) Group=1, operator=2 (Or), string_value='SE', value_type=2 (string), comparison=1 (equal)
--   (3) Group=2, operator=1 (And?), int_value=200, value_type=1 (int), comparison=5 (>=)
--   (4) Group=3, operator=2 (Or), float_value=75.0, value_type=3 (float), comparison=5 (>=)
-- -----------------------------------------------------
INSERT INTO `criterium`
(`id`, `group`, `operator`, `int_value`, `string_value`, `float_value`, `value_type`, `comparison`, `created_at`, `updated_at`)
VALUES
 (1, 1, 2, NULL, 'NO', NULL, 2, 1, NOW(), NOW()),
 (2, 1, 2, NULL, 'SE', NULL, 2, 1, NOW(), NOW()),
 (3, 2, 1, 200, NULL, NULL, 1, 5, NOW(), NOW()),
 (4, 3, 2, NULL, NULL, 75.0, 3, 5, NOW(), NOW());


